name: Build and deploy #Name of the Workflow

on: #Name of the GitHub event that triggers the workflow
  push: #On Push Event We need to take action
    branches: #Now we need to specify the branch name
      - master
  pull_request:
    branches:
      - master
env:
  ECS_SERVICE: nodejs-infra
  ECS_CLUSTER: app-production-nodejs-infra
  ECR_REGISTRY: 327689575644.dkr.ecr.ap-southeast-1.amazonaws.com
  ECR_REPOSITORY: nodejs-infra

jobs: #Workflow run is made up of one or more jobs
  build:
    runs-on: ubuntu-latest #Through which Server OS we need to Work (type of machine to run the job on)
    steps:
      #Using versioned actions
      - uses: actions/checkout@v2
      # # enable if using `act`
      # - id: install-aws-cli
      #   run: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip && sudo ./aws/install
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          # token: ${{ secrets.GITHUB_TOKEN }}
          tags: |
            type=sha,format=long,prefix=,suffix=
          flavor: |
            latest=true
            prefix=
            suffix=
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1 #--> Setup the Credential for the AWS cli
        with:
          # Created the Secrets Under the Repo only with These Variables
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1 #--> Define Region of the AWS-CLI
      - name: Download task definition
        run: aws ecs describe-task-definition --task-definition app-nodejs-infra-production --query taskDefinition > task-definition.json
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: nodejs-infra
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
